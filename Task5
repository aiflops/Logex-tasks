/****** Task:5

Create a query that will return all patients labelled by a treatment category.

Rules for labelling:

The patient should be marked by the treatment category corresponding to the subcategory mapped to an activity with the highest cost sum performed within a traject (remember single activity can be performed multiple times in a traject and in this case cost is a sum of instances).

Â·        For example, Patient 1 has 3 trajects and corresponding activities mapped to a traject.
******/
SELECT sumPrice.patient_id, sumPrice.trajectID, sumPrice.activityID, normalPrice.price, sumPrice.sum FROM 
(
  SELECT trajectory.patient_id ,detail.[traject_id] as trajectID, detail.[activity_id] as activityID, sum(prices.price) as sum
  FROM [TASK].[dbo].[test_trajectory_detail] as detail
  inner join [TASK].[dbo].[test_medical_trajectory] as trajectory
  on trajectory.traject_id = detail.traject_id
  inner join [TASK].[dbo].[test_prices] as prices
  on prices.[activity_id] = detail.[activity_id]
  group by trajectory.patient_id, detail.[traject_id], detail.[activity_id]
  ) 
  as sumPrice

  inner join (
  SELECT prices.price as price, detail.[traject_id] as trajectID, detail.[activity_id] as activityID
  FROM [TASK].[dbo].[test_trajectory_detail] as detail
  inner join [TASK].[dbo].[test_medical_trajectory] as trajectory
  on trajectory.traject_id = detail.traject_id
  inner join [TASK].[dbo].[test_prices] as prices
  on prices.[activity_id] = detail.[activity_id]
  )
  as normalPrice
  on CONCAT(normalPrice.trajectID,normalPrice.activityID) =  CONCAT(sumPrice.trajectID,sumPrice.activityID)
--  where patient_id = 843268
  order by sumPrice.patient_id, sumPrice.sum desc, sumPrice.trajectID;
